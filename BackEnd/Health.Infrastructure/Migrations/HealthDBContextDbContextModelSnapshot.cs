// <auto-generated />
using System;
using Health.Infrastructure.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Health.Infrastructure.Migrations
{
    [DbContext(typeof(HealthDBContextDbContext))]
    partial class HealthDBContextDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Health.Domain.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("AdminId");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            Email = "admin1@health.com",
                            Name = "Sarah Mitchell",
                            PhoneNo = "9123456789",
                            UserID = "A001"
                        },
                        new
                        {
                            AdminId = 2,
                            Email = "admin2@health.com",
                            Name = "Michael Chen",
                            PhoneNo = "9234567890",
                            UserID = "A002"
                        },
                        new
                        {
                            AdminId = 3,
                            Email = "admin3@health.com",
                            Name = "Laura Patel",
                            PhoneNo = "9345678901",
                            UserID = "A003"
                        },
                        new
                        {
                            AdminId = 4,
                            Email = "admin4@health.com",
                            Name = "James Lee",
                            PhoneNo = "9456789012",
                            UserID = "A004"
                        },
                        new
                        {
                            AdminId = 5,
                            Email = "admin5@health.com",
                            Name = "Emma White",
                            PhoneNo = "9567890123",
                            UserID = "A005"
                        },
                        new
                        {
                            AdminId = 6,
                            Email = "admin6@health.com",
                            Name = "Daniel Kim",
                            PhoneNo = "9678901234",
                            UserID = "A006"
                        });
                });

            modelBuilder.Entity("Health.Domain.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("AppointmentId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentId = 1,
                            AppointmentDate = new DateTime(2025, 8, 6, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            PatientId = 1,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 2,
                            AppointmentDate = new DateTime(2025, 8, 8, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            PatientId = 2,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 3,
                            AppointmentDate = new DateTime(2025, 8, 10, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            PatientId = 3,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 4,
                            AppointmentDate = new DateTime(2025, 8, 12, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            PatientId = 4,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 5,
                            AppointmentDate = new DateTime(2025, 8, 6, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            PatientId = 2,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 6,
                            AppointmentDate = new DateTime(2025, 8, 8, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            PatientId = 3,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 7,
                            AppointmentDate = new DateTime(2025, 8, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            PatientId = 4,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 8,
                            AppointmentDate = new DateTime(2025, 8, 12, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            PatientId = 5,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 9,
                            AppointmentDate = new DateTime(2025, 8, 6, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            PatientId = 3,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 10,
                            AppointmentDate = new DateTime(2025, 8, 8, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            PatientId = 4,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 11,
                            AppointmentDate = new DateTime(2025, 8, 10, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            PatientId = 5,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 12,
                            AppointmentDate = new DateTime(2025, 8, 12, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            PatientId = 6,
                            Status = "Cancelled"
                        },
                        new
                        {
                            AppointmentId = 13,
                            AppointmentDate = new DateTime(2025, 8, 6, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 4,
                            PatientId = 4,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 14,
                            AppointmentDate = new DateTime(2025, 8, 8, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 4,
                            PatientId = 5,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 15,
                            AppointmentDate = new DateTime(2025, 8, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 4,
                            PatientId = 6,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 16,
                            AppointmentDate = new DateTime(2025, 8, 12, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 4,
                            PatientId = 1,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 17,
                            AppointmentDate = new DateTime(2025, 8, 6, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            PatientId = 5,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 18,
                            AppointmentDate = new DateTime(2025, 8, 8, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            PatientId = 6,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 19,
                            AppointmentDate = new DateTime(2025, 8, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            PatientId = 1,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 20,
                            AppointmentDate = new DateTime(2025, 8, 12, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            PatientId = 2,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 21,
                            AppointmentDate = new DateTime(2025, 8, 6, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            PatientId = 6,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 22,
                            AppointmentDate = new DateTime(2025, 8, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            PatientId = 1,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 23,
                            AppointmentDate = new DateTime(2025, 8, 10, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            PatientId = 2,
                            Status = "Scheduled"
                        },
                        new
                        {
                            AppointmentId = 24,
                            AppointmentDate = new DateTime(2025, 8, 12, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            PatientId = 3,
                            Status = "Cancelled"
                        });
                });

            modelBuilder.Entity("Health.Domain.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DoctorId");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            Email = "john.health@com",
                            Name = "Dr. John Doe",
                            PhoneNo = "7123456789",
                            Speciality = "Cardiology",
                            UserID = "D001"
                        },
                        new
                        {
                            DoctorId = 2,
                            Email = "jane.health@com",
                            Name = "Dr. Jane Smith",
                            PhoneNo = "7234567890",
                            Speciality = "Neurology",
                            UserID = "D002"
                        },
                        new
                        {
                            DoctorId = 3,
                            Email = "emily.health@com",
                            Name = "Dr. Emily Johnson",
                            PhoneNo = "7345678901",
                            Speciality = "Pediatrics",
                            UserID = "D003"
                        },
                        new
                        {
                            DoctorId = 4,
                            Email = "michael.health@com",
                            Name = "Dr. Michael Brown",
                            PhoneNo = "7456789012",
                            Speciality = "Orthopedics",
                            UserID = "D004"
                        },
                        new
                        {
                            DoctorId = 5,
                            Email = "sarah.health@com",
                            Name = "Dr. Sarah Davis",
                            PhoneNo = "7567890123",
                            Speciality = "Dermatology",
                            UserID = "D005"
                        },
                        new
                        {
                            DoctorId = 6,
                            Email = "robert.health@com",
                            Name = "Dr. Robert Wilson",
                            PhoneNo = "7678901234",
                            Speciality = "Gastroenterology",
                            UserID = "D006"
                        });
                });

            modelBuilder.Entity("Health.Domain.MedicalRecord", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("RecordId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("MedicalRecords");

                    b.HasData(
                        new
                        {
                            RecordId = 1,
                            Date = new DateTime(2024, 5, 1, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Hypertension",
                            DoctorId = 1,
                            PatientId = 1,
                            Treatment = "Prescribed beta-blockers"
                        },
                        new
                        {
                            RecordId = 2,
                            Date = new DateTime(2024, 6, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Migraine",
                            DoctorId = 2,
                            PatientId = 1,
                            Treatment = "Prescribed triptans"
                        },
                        new
                        {
                            RecordId = 3,
                            Date = new DateTime(2024, 7, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Arthritis",
                            DoctorId = 4,
                            PatientId = 1,
                            Treatment = "Prescribed NSAIDs"
                        },
                        new
                        {
                            RecordId = 4,
                            Date = new DateTime(2024, 5, 2, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Epilepsy",
                            DoctorId = 2,
                            PatientId = 2,
                            Treatment = "Prescribed anticonvulsants"
                        },
                        new
                        {
                            RecordId = 5,
                            Date = new DateTime(2024, 6, 16, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "High cholesterol",
                            DoctorId = 1,
                            PatientId = 2,
                            Treatment = "Prescribed statins"
                        },
                        new
                        {
                            RecordId = 6,
                            Date = new DateTime(2024, 7, 21, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Eczema",
                            DoctorId = 5,
                            PatientId = 2,
                            Treatment = "Prescribed topical steroids"
                        },
                        new
                        {
                            RecordId = 7,
                            Date = new DateTime(2024, 5, 3, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Asthma",
                            DoctorId = 3,
                            PatientId = 3,
                            Treatment = "Prescribed inhaler"
                        },
                        new
                        {
                            RecordId = 8,
                            Date = new DateTime(2024, 6, 17, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Ear infection",
                            DoctorId = 3,
                            PatientId = 3,
                            Treatment = "Prescribed antibiotics"
                        },
                        new
                        {
                            RecordId = 9,
                            Date = new DateTime(2024, 7, 22, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Gastritis",
                            DoctorId = 6,
                            PatientId = 3,
                            Treatment = "Prescribed PPIs"
                        },
                        new
                        {
                            RecordId = 10,
                            Date = new DateTime(2024, 5, 4, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Heart murmur",
                            DoctorId = 1,
                            PatientId = 4,
                            Treatment = "Scheduled for echocardiogram"
                        },
                        new
                        {
                            RecordId = 11,
                            Date = new DateTime(2024, 6, 18, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Neuropathy",
                            DoctorId = 2,
                            PatientId = 4,
                            Treatment = "Prescribed gabapentin"
                        },
                        new
                        {
                            RecordId = 12,
                            Date = new DateTime(2024, 7, 23, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Sprained ankle",
                            DoctorId = 4,
                            PatientId = 4,
                            Treatment = "RICE protocol advised"
                        },
                        new
                        {
                            RecordId = 13,
                            Date = new DateTime(2024, 5, 5, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Bronchitis",
                            DoctorId = 3,
                            PatientId = 5,
                            Treatment = "Prescribed cough suppressant"
                        },
                        new
                        {
                            RecordId = 14,
                            Date = new DateTime(2024, 6, 19, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Angina",
                            DoctorId = 1,
                            PatientId = 5,
                            Treatment = "Prescribed nitroglycerin"
                        },
                        new
                        {
                            RecordId = 15,
                            Date = new DateTime(2024, 7, 24, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Psoriasis",
                            DoctorId = 5,
                            PatientId = 5,
                            Treatment = "Prescribed topical treatment"
                        },
                        new
                        {
                            RecordId = 16,
                            Date = new DateTime(2024, 5, 6, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "IBS",
                            DoctorId = 6,
                            PatientId = 6,
                            Treatment = "Dietary changes advised"
                        },
                        new
                        {
                            RecordId = 17,
                            Date = new DateTime(2024, 6, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Allergic rhinitis",
                            DoctorId = 3,
                            PatientId = 6,
                            Treatment = "Prescribed antihistamines"
                        },
                        new
                        {
                            RecordId = 18,
                            Date = new DateTime(2024, 7, 25, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Lower back pain",
                            DoctorId = 4,
                            PatientId = 6,
                            Treatment = "Physical therapy recommended"
                        });
                });

            modelBuilder.Entity("Health.Domain.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("PatientId");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            Email = "alice@gmail.com",
                            PatientName = "Alice Smith",
                            PhoneNo = "8123456789",
                            UserID = "P001"
                        },
                        new
                        {
                            PatientId = 2,
                            Email = "bob@gmail.com",
                            PatientName = "Bob Johnson",
                            PhoneNo = "8234567890",
                            UserID = "P002"
                        },
                        new
                        {
                            PatientId = 3,
                            Email = "charlie@gmail.com",
                            PatientName = "Charlie Brown",
                            PhoneNo = "8345678901",
                            UserID = "P003"
                        },
                        new
                        {
                            PatientId = 4,
                            Email = "david@gmail.com",
                            PatientName = "David Wilson",
                            PhoneNo = "8456789012",
                            UserID = "P004"
                        },
                        new
                        {
                            PatientId = 5,
                            Email = "eve@gmail.com",
                            PatientName = "Eve Davis",
                            PhoneNo = "8567890123",
                            UserID = "P005"
                        },
                        new
                        {
                            PatientId = 6,
                            Email = "frank@gmail.com",
                            PatientName = "Frank Taylor",
                            PhoneNo = "8678901234",
                            UserID = "P006"
                        });
                });

            modelBuilder.Entity("Health.Domain.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = "D001",
                            Email = "john.health@com",
                            PasswordHash = "AQAAAAIAAYagAAAAEAkKM3/kn7yaGtXVgpB4gg54RsxbrDEVWOxKI/wbMvyqmoKPzZ6ArWP2MUsY7Hf6Vw==",
                            Role = "Doctor"
                        },
                        new
                        {
                            UserId = "D002",
                            Email = "jane.health@com",
                            PasswordHash = "AQAAAAIAAYagAAAAEONz4scTb3bEjpHXRQAQ1E84s11ne9lj/NNZXOjnpmEiLP0c2gHdEkgzRLYPeOv3Zw==",
                            Role = "Doctor"
                        },
                        new
                        {
                            UserId = "D003",
                            Email = "emily.health@com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMB3aek9fd7FuWfOQ/bPlTyjAmDWNFo6jZolxHSCPyoieBeUS7WYVU/CZ53ABabXHg==",
                            Role = "Doctor"
                        },
                        new
                        {
                            UserId = "D004",
                            Email = "michael.health@com",
                            PasswordHash = "AQAAAAIAAYagAAAAEJ/Al82EUnqODjsIF47SBWZ4xoP1rImnKcER065drDGuIqVubwENU1H4ckJP/Lmw6Q==",
                            Role = "Doctor"
                        },
                        new
                        {
                            UserId = "D005",
                            Email = "sarah.health@com",
                            PasswordHash = "AQAAAAIAAYagAAAAELvSM+2mP+SsrjZQkinOjQytGWZWgG9OwjH/wb+I+9CiNQJA7ZwlrvMcMkangZJ5zw==",
                            Role = "Doctor"
                        },
                        new
                        {
                            UserId = "D006",
                            Email = "robert.health@com",
                            PasswordHash = "AQAAAAIAAYagAAAAEHaiCuE+3RNMSQVcD4i5etA8gnrWRrAIw8KcmFnJ9U+nerqqywh/k6NH0J5UoqT6CQ==",
                            Role = "Doctor"
                        },
                        new
                        {
                            UserId = "P001",
                            Email = "alice@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEAkdvrUJcaJYc3x3s3ffCY7SUHyURZCAbXWZltJY8k3j4Zb/0u87H26SoXbu9xvsmw==",
                            Role = "Patient"
                        },
                        new
                        {
                            UserId = "P002",
                            Email = "bob@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEPp1IgF1hK0sR1RP4cA7JhCXt3muptoWuJHSHHHySzkrVPkCB/9spY9CHv/p9oEZ3A==",
                            Role = "Patient"
                        },
                        new
                        {
                            UserId = "P003",
                            Email = "charlie@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEKTLh3K2FUZ51JULLbuXch5XHfZ5G9r/kTUhNLw1hK0jcxsJNSixOhbGpoLmH1i+fQ==",
                            Role = "Patient"
                        },
                        new
                        {
                            UserId = "P004",
                            Email = "david@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEC+SPdengWuy1rKmeFUeanP6yvVToThUixMAU/ugz3UXiiOopxYHFOITIr/P8XzDcw==",
                            Role = "Patient"
                        },
                        new
                        {
                            UserId = "P005",
                            Email = "eve@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEED4VVlbbZ+4epFPflGviUFTD0eTmklAC7A7c2WbThaXu2F+BCasPH8CRw9HgjLjHQ==",
                            Role = "Patient"
                        },
                        new
                        {
                            UserId = "P006",
                            Email = "frank@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEF1EQfFd+E8eBETTifRuWCm3I0nN60hkyd/lD7NzPwG1VBg6HxVMI/1MDVMKQzBo5Q==",
                            Role = "Patient"
                        },
                        new
                        {
                            UserId = "A001",
                            Email = "admin1@health.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEJsVl2sN/ghDVFOxPvAyUxiuCChOSX0qKhm/CcO2aly9zjCq/1w8+INNK0BmYCe62Q==",
                            Role = "Admin"
                        },
                        new
                        {
                            UserId = "A002",
                            Email = "admin2@health.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEEtVEsqDY5Z96Tf0g4c3wWcfu6bY4+oaT79FfTwnQoJmSW5gx4FO4bY44rZENlQV5g==",
                            Role = "Admin"
                        },
                        new
                        {
                            UserId = "A003",
                            Email = "admin3@health.com",
                            PasswordHash = "AQAAAAIAAYagAAAAENZsg4RvglYW8ry71IzyzGGsI1FKqNzz+eontipmcnUDWgwTnqSorFXlEwAkJibuDg==",
                            Role = "Admin"
                        },
                        new
                        {
                            UserId = "A004",
                            Email = "admin4@health.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMjGTijeBnpDXUM+oJ2lJidCtsNf6hZty1NK6n5g5fnWbjxWiN5R/p+Nzj2rUCzxsw==",
                            Role = "Admin"
                        },
                        new
                        {
                            UserId = "A005",
                            Email = "admin5@health.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGagcOxGkBYuGGHH74Nqm6KSpqmPlbTduH6BAOhfYTHgydiNyzlmi1hqWz84efn/wQ==",
                            Role = "Admin"
                        },
                        new
                        {
                            UserId = "A006",
                            Email = "admin6@health.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEPDA8yNBrbR0YP08EA31OrAu0VZpoQFwy9lluhjsDzx3WpLaBIQCrc3p4OYaAJDOvw==",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("Health.Domain.Admin", b =>
                {
                    b.HasOne("Health.Domain.User", "User")
                        .WithOne()
                        .HasForeignKey("Health.Domain.Admin", "UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Health.Domain.Appointment", b =>
                {
                    b.HasOne("Health.Domain.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Health.Domain.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Health.Domain.Doctor", b =>
                {
                    b.HasOne("Health.Domain.User", "User")
                        .WithOne()
                        .HasForeignKey("Health.Domain.Doctor", "UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Health.Domain.MedicalRecord", b =>
                {
                    b.HasOne("Health.Domain.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Health.Domain.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Health.Domain.Patient", b =>
                {
                    b.HasOne("Health.Domain.User", "User")
                        .WithOne()
                        .HasForeignKey("Health.Domain.Patient", "UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
